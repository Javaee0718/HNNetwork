<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.womow.henan.modules.sys.user.dao.BusRoleDao">

	<!-- 查询Role,级联查询权限 -->
	<resultMap type="com.womow.henan.modules.sys.security.dto.BusRoleEntityDo"
		id="roleAndAuth">
		<id column="id" property="id" />
		<result column="role" property="role" />
		<result column="is_del" property="isDel" />
		<collection property="auths"
			ofType="com.womow.henan.modules.sys.security.dto.BusAuthorityEntityDo"
			javaType="java.util.ArrayList">
			<id column="authorityId" property="id" />
			<result column="authority" property="authority" />
		</collection>
	</resultMap>

	<!-- 查询Role,级联查询权限描述 -->
	<resultMap type="com.womow.henan.modules.sys.security.dto.BusRoleEntityDo"
		id="roleAndAuthDescription">
		<id column="id" property="id" />
		<result column="role" property="role" />
		<result column="is_del" property="isDel" />
		<result column="description" property="description" />
		<result column="create_date" property="createDate" />
		<collection property="descriptions" ofType="java.lang.String"
			javaType="java.util.ArrayList">
			<result column="authDescription" property="descriptions" />
		</collection>
	</resultMap>

	<sql id="roleField">
		role.id,
		role.role,
		role.description,
		role.is_del,
		role.create_user_id,
		role.create_date,
		role.update_user_id,
		role.update_date
	</sql>

	<!-- 根据角色名查询该对象 -->
	<select id="find"
		resultType="com.womow.henan.modules.sys.security.dto.BusRoleEntityDo">
		SELECT
		id
		FROM
		b_roletab
		WHERE
		role = #{role}
	</select>
	<!-- 查询所有role -->
	<select id="findAll" resultMap="roleAndAuthDescription">
		select
		role.id,role.role,role.description,role.is_del,role.create_date,
		authority.description as authDescription
		from (
		(
		SELECT r.* from
		b_roletab as r
		order by r.create_date desc
		<if test="offset != null and limit != null">
			limit #{offset},#{limit}
		</if>
		) AS role
		)
		left join b_role_authority as role_authority on role.id =
		role_authority.role_id and role_authority.is_del = 1
		left join
		b_authoritytab as authority on
		role_authority.authority_id =
		authority.id and authority.is_del = 1
		<where>
			<if test="isDel != null">
				role.is_del = #{isDel}
			</if>
		</where>
		order by role.create_date desc

	</select>

	<!-- 查询该角色信息, 包括该角色所拥有的权限 -->
	<select id="findById" resultMap="roleAndAuth">
		SELECT
		role.id,
		role.role,
		role.description,
		role.is_del,
		authority.id as authorityId,
		authority.authority as
		authority
		FROM
		b_roletab AS role
		LEFT JOIN
		b_role_authority AS
		role_authority ON role.id =
		role_authority.role_id
		and role_authority.is_del = 1
		LEFT JOIN
		b_authoritytab AS authority ON
		role_authority.authority_id =
		authority.id AND
		authority.is_del = 1
		WHERE
		role.id = #{id}
	</select>

	<!-- 修改Role -->
	<update id="update">
		update b_roletab
		<set>
			<if test="role != null and role != ''">role = #{role},</if>
			<if test="description != null and description != ''">description = #{description},</if>
			<if test="isDel != null">is_del = #{isDel},</if>
			<if test="createUserId != null and createUserId != ''">create_user_id = #{createUserId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="updateUserId != null and updateUserId != ''">update_user_id = #{updateUserId},</if>
			<if test="updateDate != null">update_date = #{updateDate}</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>

	<!-- 添加角色 -->
	<insert id="save">
		insert into b_roletab (
		role,
		is_del,
		description,
		create_user_id,
		create_date,
		update_user_id,
		update_date
		) values (
		#{role},
		#{isDel},
		#{description},
		#{createUserId},
		#{createDate},
		#{updateUserId},
		#{updateDate}
		)
		<selectKey resultType="int" keyColumn="id" keyProperty="id">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="dataCount" resultType="int">
		select count(1)
		from b_roletab
	</select>
</mapper>